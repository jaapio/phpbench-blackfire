<?php

declare(strict_types=1);

namespace Jaapio\Blackfire;

use Composer\Composer;
use Composer\EventDispatcher\EventSubscriberInterface;
use Composer\IO\IOInterface;
use Composer\Plugin\PluginInterface;
use Composer\Script\Event;
use Composer\Script\ScriptEvents;
use RecursiveDirectoryIterator;
use RecursiveIteratorIterator;
use SplFileInfo;

class Installer implements PluginInterface, EventSubscriberInterface
{

    public static function dumpAutoload(Event $composerEvent)
    {
        $autoloadFile = fopen(__DIR__ . '/../src/autoload.php', 'wb+');

        $fileHead = <<<FILEHEAD
        /**
         * This class is generated by jaapio/phpbench-blackfire, specifically by
         * bin/dumpautoload.php
         *
         * This file is overwritten at every run of `composer install` or `composer update`.
         */

FILEHEAD;

        $vendorDir = $composerEvent->getComposer()->getConfig()->get('vendor-dir');
        fwrite($autoloadFile, $fileHead);

        self::dumpautoloadFolder($autoloadFile, $vendorDir . '/blackfire/php-sdk/src/Blackfire');
        self::dumpautoloadFolder($autoloadFile, $vendorDir . '/composer/ca-bundle/src');

    }


    private static function dumpautoloadFolder($autoloadFile, $path)
    {
        $directoryIterator = new RecursiveDirectoryIterator(
            $path
        );

        $iterator = new RecursiveIteratorIterator($directoryIterator);

        /** @var SplFileInfo $file */
        foreach ($iterator as $file) {
            if ($file->isFile()) {
                fwrite($autoloadFile, "require_once '" . realpath($file->getPathname()) . "';" . PHP_EOL);
            }
        }
    }

    /**
     * @inheritDoc
     */
    public function activate(Composer $composer, IOInterface $io)
    {
        //Nothing to do here, only event subscribing.
    }

    /**
     * @inheritDoc
     */
    public static function getSubscribedEvents()
    {
        return [ScriptEvents::POST_AUTOLOAD_DUMP => 'dumpAutoload'];
    }
}
