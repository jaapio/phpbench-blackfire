<?php

declare(strict_types=1);

namespace Jaapio\Blackfire;

use Composer\Composer;
use Composer\EventDispatcher\EventSubscriberInterface;
use Composer\IO\IOInterface;
use Composer\Plugin\PluginInterface;
use Composer\Script\Event;
use Composer\Script\ScriptEvents;

class Installer implements PluginInterface, EventSubscriberInterface
{

    public static function dumpAutoload(Event $composerEvent)
    {
        $autoloadFile = fopen(__DIR__ . '/../src/autoload.php', 'wb+');

        $fileHead = <<<FILEHEAD
<?php
/**
 * This class is generated by jaapio/phpbench-blackfire, specifically by
 * bin/dumpautoload.php
 *
 * This file is overwritten at every run of `composer install` or `composer update`.
 */

FILEHEAD;

        $fileBody = '
if (!class_exists(\'\Composer\Autoload\ClassLoader\')) {
    require_once $vendorDir . "/composer/ClassLoader.php";
}

$classloader = new \Composer\Autoload\ClassLoader();
$classloader->addPsr4(\'Blackfire\\\\\',  array($vendorDir . \'/blackfire/php-sdk/src/Blackfire\'));
$classloader->addPsr4(\'Composer\\CaBundle\\\\\',  array($vendorDir . \'/composer/ca-bundle/src\'));

$classloader->register();
';


        $vendorDir = $composerEvent->getComposer()->getConfig()->get('vendor-dir');
        fwrite($autoloadFile, $fileHead);
        fwrite($autoloadFile, sprintf('$vendorDir = \'%s\';', $vendorDir));
        fwrite($autoloadFile, $fileBody);
    }

    /**
     * @inheritDoc
     */
    public function activate(Composer $composer, IOInterface $io)
    {
        //Nothing to do here, only event subscribing.
    }

    /**
     * @inheritDoc
     */
    public static function getSubscribedEvents()
    {
        return [ScriptEvents::POST_AUTOLOAD_DUMP => 'dumpAutoload'];
    }
}
